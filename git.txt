Git : 명령어
- 소스, 버전관리
- 리눅스 창시자 '리누스 토발즈'가 개발
- 사용자 설정
   : git config --global user.name "name"
   : git config --global user.email "eMail address"

git 외 버전관리 도구 svn(sebversion)

git의 동작방식 
- 시간순으로 프로젝트의 스냅샷 저장 : commit
    - 달라진 부분만 저장
git 영역 : 
- workdirectory(work station) : 작업중인 공간
- staging : repository로 보내기 위에 work station에서 끌어 올린 부분
- repository : 최종 저장 공간

vscode - setting - default profile - gitbash terminal 

--git 명령어
    -- 환경설정 관련
        -- git config --list : config 설정 확인


-- git init : working directory 생성
-- git add "file.txt" : 해당 파일을 stage영역으로 끌어올림
-- git restore <File> : 수정본에 대한 내용제거(modified 상태였던 파일 로컬저장소로 보냄)
-- git rm --cached 파일명 : staged에 있는 파일을 Untracked상태로 끌어들임
-- git restore --staged : staged Untracked로 끌어들임
-- restore git commit -a -m "msg" : modified상태의 파일을 대상으로 add와 commit을 동시에 진행
git status : 해당 git의 상태 확인
git log --graph : graph의 log들을 확인


command : git init 
-> directory 생성
새파일 작성(Untracked file)
command : git add "file.txt"
-> 작성한 파일을 staging 영역으로 보내기
command : git commit "msg"
-> stage에 있던 파일들을 로컬 저장소로 push 하면서 메시지남김

commit의 한 과정
1. 파일 작성
2. 해당 파일 스테이징화면으로 끌어올리기
3. 해당 파일 commit
4. 로컬 레포지토리에 도착


git 파일 상태
 Untracked

 Unmodified : add하여 스테이지에 올라온 것
 modified : add,  restore git commit -a -m "msg"

 staged

 직전 commit 메시지 수정
    git commit --amend : 직전 커밋을 취소 시킴
    commit을 다시하는 것이기에 스테이지에 있는 파일들을 한꺼번에 커밋.

    